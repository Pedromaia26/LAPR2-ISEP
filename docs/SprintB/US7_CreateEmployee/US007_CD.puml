@startuml
RegistEmployeeUI ..> RegistEmployeeController
RegistEmployeeController ..>Company
RegistEmployeeController ..>Employee
RegistEmployeeController ..>SpecialistDoctor
RegistEmployeeController ..>RolesMapper
RegistEmployeeController ..>EmployeeDto
OrgRole ..> Employee
OrgRole ..> SpecialistDoctor
Employee <|-- SpecialistDoctor

RegistEmployeeController : +getRoles()
RegistEmployeeController : +createEmployee(empDto)
RegistEmployeeController : +saveEmployee()

Company "1" --> "*" Employee: has

Company ..> RolesMapper

RolesMapper ..> EmployeeDto

RolesMapper ..> Employee

RolesMapper : +toDTO(lRoles)

Company : +getRoles()
Company : +createEmployee(empDto)
Company : +getRoleById(roleId)
Company : +saveEmployee(emp)
Company : +validateEmployee(emp)
Company : +addEmployee(emp)

OrgRole : +createEmployee(role, id, name, address, phoneNumber, emailAddress, socCode)
OrgRole : +createEmployee(role, id, name, address, phoneNumber, emailAddress, socCode, doctorIndexNumber)

EmployeeDto : +getRoleId()
EmployeeDto : +getId()
EmployeeDto : +getName()
EmployeeDto : +getAdress()
EmployeeDto : +getPhoneNumber()
EmployeeDto : +getSocCode()
EmployeeDto : +getEmail()
EmployeeDto : +getDoctorIndexNumber()
EmployeeDto : -employeeID
EmployeeDto : -name
EmployeeDto : -address
EmployeeDto : -phoneNumber
EmployeeDto : -socCode
EmployeeDto : -email

Employee : +create(role, id, name, address, phoneNumber, emailAddress, socCode)
Employee : -employeeID
Employee : -name
Employee : -address
Employee : -phoneNumber
Employee : -socCode
Employee : -email

SpecialistDoctor : +create(role, id, name, address, phoneNumber, emailAddress, socCode, doctorIndexNumber)
SpecialistDoctor : -doctorIndexNumber
@enduml
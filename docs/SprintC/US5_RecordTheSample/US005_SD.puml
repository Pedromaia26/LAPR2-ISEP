@startuml
actor "Medical Lab Technician" as Adm
participant ":RecordSampleUI" as Interface
participant ":RecordSampleController" as Controller
participant ":Company" as Company
participant ":LabOrderMapper" as TM
participant "store \n :SampleStore" as SS
participant "SampleMapper" as SM
participant "SampDto: SampleDto" as SD
participant "store \n :LabOrderStore" as TS




 
 
autonumber
activate Adm
Adm -> Interface: starts recording a new sample
activate Interface
Interface -> Controller: orderDto = getTest()
activate Controller
Controller -> Company : orderStore=getLabOrderStore()
activate Company
deactivate Company
Controller -> TS: order = getLabOrder()
activate TS
deactivate TS
Controller -> TM: OrderDto = toDTO(order)
activate TM

TM-->Controller : OrderDto 
deactivate TM
Controller-->Interface : OrderDto 
deactivate Controller
Interface --> Adm: shows the list of tests registered to be performed and requests to select one of them
deactivate Interface



Adm -> Interface: selects the intended test
activate Interface
Interface --> Adm: request data (descriptionMethod, dateCollection, timeCollection)
deactivate Interface


Adm -> Interface: types requested data
activate Interface
Interface->Controller: RecordNewSample(dto)
activate Controller
Controller -> Company : sampleStore=getSampleStore()
activate Company
Deactivate Company
Controller->SS: samp=RecordNewSample(dto)
activate SS


SS->SM: toModel(dto)
activate SM
SM->SD: description=getDescription()
activate SD
deactivate SD
SM->SD: dataColl=getDataColl()
activate SD
deactivate SD
SM->SD: timeColl=getTimeColl()
activate SD
deactivate SD
SM->SD: orderid=getOrderId()
activate SD
deactivate SD
SM->TS: testype=getTestTypeByOrderId(order)
activate TS
deactivate TS




create "samp: Sample" as samp
SM->samp:  create(description,dataColl,timeColl,testype)



deactivate SM
deactivate SS

Controller->SS:validateNewSample(samp)
Activate SS
deactivate SS

deactivate Controller

Interface--> Adm: shows the data and request a confirmation
deactivate Interface


Adm -> Interface: confirms the data
activate Interface
Interface->Controller: saveNewSample()
activate Controller
Controller->SS:saveNewSample(samp)
activate SS
SS->SS:validateNewSample(samp)
activate SS
deactivate SS
SS->SS:addNewSample(samp)
activate SS
deactivate SS

deactivate SS
deactivate Controller
Interface--> Adm: informs operation success

deactivate Interface
deactivate Adm
@enduml
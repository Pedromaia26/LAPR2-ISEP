@startuml
package "UI" {
  Class RecordSampleUI
}
package "Controllers" {
 Class RecordSampleController
}
package "Domain" {
 Class Company
Class Sample
Class TestMapper
Class SampleDTO
Class SampleMapper
Class TestStore
Class Test
Class TestDTO
Class LabOrder
Interface ApiBarcode
Class BarcodeAdapter
Class BarcodeCreate
}


RecordSampleUI ..> RecordSampleController
RecordSampleController..>Company
RecordSampleController..>Sample
RecordSampleController..>TestMapper
RecordSampleController..>SampleDTO
RecordSampleController..>SampleMapper
RecordSampleController..>TestStore









RecordSampleController : +RecordNewSample(dto)
RecordSampleController : +saveNewSample()
RecordSampleController : +getTest()


Test --> Sample: has

Company --> TestStore

TestStore : +getTestByTestTypeCode(testid)

TestMapper ..> TestDTO
TestDTO..> Test


TestStore --> Test : Has
SampleMapper ..> SampleDTO


TestMapper ..> TestStore

Test ..> LabOrder
LabOrder : -testType
LabOrder : -parameters


TestMapper : +toDTO(tests)

SampleMapper : +toModel()

SampleMapper ..> TestStore

Sample --> ApiBarcode

BarcodeAdapter  ..> ApiBarcode

BarcodeAdapter --> BarcodeCreate


ApiBarcode : +BarcodeCreate makeUPCABarcode()

BarcodeAdapter : +BarcodeCreate makeUPCABarcode()

BarcodeCreate : +BarcodeCreate(Object barcode, String barcodeNumber)
BarcodeCreate : -barcode
BarcodeCreate : -barcodeNumber


Company : +getTestStore()
Company : +getSampleStore()

Test : +RecordNewSample(tdo)
Test : +validateNewSample(samp)
Test : +saveNewSample(samp)
Test : +addNewSample(samp)
Test : -LabOrder
Test : -Sample

SampleDTO : +getOrderid()



SampleDTO : -orderid


Sample : +Sample()
Sample : +getBarcodecreator()
Sample : -barcode
@enduml
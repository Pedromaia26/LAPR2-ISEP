@startuml
package UI{
    Class WriteReportUI
}
package Controllers{
    Class WriteReportController
}
package Domain{
    Class TestDto
    Class TestParameterDto
    Class Company
    Class TestParameterMapper
    Class TestParameter
    Class Test
    Class TestMapper
    Class TestStore
    Class TestParameterDto
    Class Report
}
WriteReportUI ..> WriteReportController
WriteReportUI ..> TestDto
WriteReportUI ..> TestParameterDto
WriteReportController..>Company
WriteReportController..>TestParameterMapper
WriteReportController..>TestParameter
WriteReportController..>Test
WriteReportController..>TestDto
WriteReportController..>TestMapper
WriteReportController..>TestStore
WriteReportController..>TestParameterDto

WriteReportController : +getTests()
WriteReportController : +getResultParameters(testDto)
WriteReportController : +createReport(diagnosisText)

Company : +getTestStore()
Company"1" --> "1"TestStore: has

TestStore : +getTests()
TestStore : +getTestByCode(code)
TestStore"1" --> "*"Test: has

TestMapper : +toDTO(lTests)
TestMapper..>Test
TestMapper..>TestDto

TestDto : +getCode()

Test : +getResultParameters()
Test : +addReport(diagnosisText)
Test : -report

Test"1" --> "*"Report : associated with
Test"1..*" --> "1..*"TestParameter: request analysis of

TestParameterMapper : +toDto(lResultParameters)
TestParameterMapper..>TestParameter
TestParameterMapper..>TestParameterDto

TestParameter : -parameter
TestParameter : -tpr

Report : +create(diagnosisText)
Report : +getData()
Report : +validate(diagnosisText)
Report : -diagnosis
Report : -createdAt
@enduml